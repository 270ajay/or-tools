# Copyright 2010-2022 Google LLC
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

package(default_visibility = ["//ortools/math_opt:__subpackages__"])

cc_library(
    name = "model_storage_types",
    hdrs = ["model_storage_types.h"],
    deps = ["//ortools/base:intops"],
)

cc_library(
    name = "sparse_matrix",
    srcs = ["sparse_matrix.cc"],
    hdrs = ["sparse_matrix.h"],
    deps = [
        ":model_storage_types",
        "//ortools/base:intops",
        "//ortools/base:map_util",
        "//ortools/base:strong_vector",
        "//ortools/math_opt:sparse_containers_cc_proto",
        "@com_google_absl//absl/container:flat_hash_map",
        "@com_google_absl//absl/container:flat_hash_set",
    ],
)

cc_library(
    name = "model_storage",
    srcs = ["model_storage.cc"],
    hdrs = ["model_storage.h"],
    deps = [
        ":model_storage_types",
        ":model_update_merge",
        ":sparse_matrix",
        "//ortools/base",
        #"//ortools/base:logging",
        "//ortools/base:map_util",
        "//ortools/base:intops",
        "//ortools/math_opt:model_cc_proto",
        "//ortools/math_opt:model_update_cc_proto",
        "//ortools/math_opt:solution_cc_proto",
        "//ortools/math_opt:sparse_containers_cc_proto",
        "//ortools/math_opt/core:sparse_vector_view",
        "//ortools/math_opt/validators:model_validator",
        "@com_google_absl//absl/base:core_headers",
        "@com_google_absl//absl/container:flat_hash_map",
        "@com_google_absl//absl/container:flat_hash_set",
        "@com_google_absl//absl/memory",
        "@com_google_absl//absl/meta:type_traits",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/synchronization",
        "@com_google_absl//absl/types:span",
    ],
)

cc_library(
    name = "model_update_merge",
    srcs = ["model_update_merge.cc"],
    hdrs = ["model_update_merge.h"],
    deps = [
        ":proto_merging_utils",
        "//ortools/base",
        #"//ortools/base:logging",
        #"@com_google_absl//absl/log:check",
        "//ortools/math_opt:model_cc_proto",
        "//ortools/math_opt:model_update_cc_proto",
        "//ortools/math_opt:sparse_containers_cc_proto",
        "//ortools/math_opt/core:sparse_vector_view",
    ],
)

cc_library(
    name = "proto_merging_utils",
    srcs = ["proto_merging_utils.cc"],
    hdrs = ["proto_merging_utils.h"],
    deps = [
        "//ortools/math_opt:sparse_containers_cc_proto",
        "//ortools/math_opt/core:sparse_vector_view",
        "//ortools/base:protobuf_util",
        "//ortools/base",
        #"//ortools/base:logging",
        #"@com_google_absl//absl/log:check",
        "@com_google_absl//absl/container:flat_hash_set",
        "@com_google_protobuf//:protobuf",
    ],
)
